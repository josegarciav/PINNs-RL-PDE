# PINN Configuration with PDE-specific settings
# Configuration file for Physics-Informed Neural Networks

# Device Configuration
device: "mps"  # Options: "cuda", "mps", "cpu"

# Architecture-specific configurations
architectures:
  feedforward:
    hidden_dims: [124, 124, 124, 124, 124, 124, 124]  # 7 hidden layers by default
    activation: "tanh"
    dropout: 0.1
    layer_norm: true
  
  resnet:
    hidden_dim: 124
    num_blocks: 7  # 7 residual blocks by default
    activation: "tanh"
    dropout: 0.1
  
  siren:
    hidden_dims: [124, 124, 124, 124, 124, 124, 124]
    omega_0: 30.0  # Frequency parameter for sine activation
  
  fourier:
    mapping_size: 124  # Size of the Fourier feature mapping
    hidden_dims: [124, 124, 124, 124, 124, 124, 124]
    scale: 10.0  # Scale factor for random Fourier features
    activation: "relu"
  
  attention:
    hidden_dim: 124
    num_layers: 4  # 4 attention blocks by default
    num_heads: 4  # 4 attention heads per block
    dropout: 0.1
    activation: "gelu"
  
  autoencoder:
    latent_dim: 64  # Dimension of the latent space
    hidden_dims: [124, 248, 124]  # Encoder and decoder dimensions
    activation: "relu"
    dropout: 0.1
    layer_norm: true

# Default PDE type to use
pde_type: "wave"  # Options: "heat", "wave", "burgers", "convection", "kdv", "allen_cahn", "cahn_hilliard", "black_scholes", "pendulum"

# PDE-specific configurations
pde_configs:
  # Heat Equation Configuration
  heat:
    name: "Heat Equation"
    architecture: "fourier"  # Good for smooth diffusion problems
    input_dim: 2  # (x, t) 
    output_dim: 1  # u(x,t)
    parameters:
      alpha: 0.01  # Thermal diffusivity coefficient
    domain: [[0.0, 1.0]]  # Spatial domain [[x_min, x_max]] for 1D, [[0.0, 1.0], [0.0, 1.0]] for 2D
    time_domain: [0.0, 1.0]  # Temporal domain [t_min, t_max]
    dimension: 1 # 1D or 2D
    initial_condition:
      type: "sine"
      amplitude: 1.0
      frequency: 1.0
    boundary_conditions:
      dirichlet:
        type: "fixed"
        value: 0.0
    exact_solution:
      type: "sine" #changes to sine_2d for 2D
      amplitude: 1.0
      frequency: 1.0

  # Wave Equation Configuration
  wave:
    name: "Wave Equation"
    architecture: "siren"  # Excellent for capturing oscillations and wave patterns
    input_dim: 2  # (x, t)
    output_dim: 1  # u(x,t)
    parameters:
      c: 1.0  # Wave speed
    domain: [[0.0, 1.0]]
    time_domain: [0.0, 1.0]
    dimension: 1
    initial_condition:
      type: "sine"
      amplitude: 1.0
      frequency: 1.0
    boundary_conditions:
      dirichlet:
        type: "fixed"
        value: 0.0
    exact_solution:
      type: "sine"
      amplitude: 1.0
      frequency: 1.0
  
  # Burgers Equation Configuration
  burgers:
    name: "Burgers Equation"
    architecture: "resnet"  # Good for nonlinear problems with discontinuities (shocks)
    input_dim: 2  # (x, t)
    output_dim: 1  # u(x,t)
    parameters:
      viscosity: 0.01  # Viscosity coefficient
    domain: [[-1.0, 1.0]]
    time_domain: [0.0, 1.0]
    dimension: 1
    initial_condition:
      type: "sine"
      amplitude: -1.0
      frequency: 1.0
    boundary_conditions:
      dirichlet:
        type: "fixed"
        value: 0.0
    exact_solution:
      type: "cole_hopf"  # Cole-Hopf transformation for viscous Burgers
      viscosity: 0.01
      initial_amplitude: -1.0
      initial_frequency: 1.0
  
  # Convection Equation Configuration
  convection:
    name: "Convection Equation"
    architecture: "fourier"  # Good for transport problems with high frequencies
    input_dim: 2  # (x, t)
    output_dim: 1  # u(x,t)
    parameters:
      velocity: [1.0]  # Convection velocity vector [vx]
    domain: [[0.0, 2.0]]
    time_domain: [0.0, 1.0]
    dimension: 1
    initial_condition:
      type: "sine"
      amplitude: 1.0
      frequency: 1.0
    boundary_conditions:
      dirichlet:
        type: "periodic"
    exact_solution:
      type: "sine"
      amplitude: 1.0
      frequency: 1.0
  
  # KdV Equation Configuration
  kdv:
    name: "KdV Equation"
    architecture: "siren"  # Ideal for solitons and nonlinear wave patterns
    input_dim: 2  # (x, t)
    output_dim: 1  # u(x,t)
    parameters:
      alpha: 6.0  # Nonlinear coefficient
      beta: 1.0   # Dispersion coefficient
      speed: 1.0  # Wave speed
    domain: [[-15.0, 15.0]]
    time_domain: [0.0, 5.0]
    dimension: 1
    initial_condition:
      type: "soliton"
      speed: 1.0
    boundary_conditions:
      dirichlet:
        type: "fixed"
        value: 0.0
    exact_solution:
      type: "soliton"
      speed: 1.0
  
  # Allen-Cahn Equation Configuration
  allen_cahn:
    name: "Allen-Cahn Equation"
    architecture: "fourier"  # Good for problems with sharp interfaces
    input_dim: 2  # (x, t)
    output_dim: 1  # u(x,t)
    parameters:
      epsilon: 0.1  # Interface width parameter
      reaction_rate: 1.0  # Reaction rate
    domain: [[-1.0, 1.0]]
    time_domain: [0.0, 1.0]
    dimension: 1
    initial_condition:
      type: "tanh"
    boundary_conditions:
      dirichlet:
        type: "fixed"
        value: 0.0
    exact_solution:
      type: "tanh"
  
  # Cahn-Hilliard Equation Configuration
  cahn_hilliard:
    name: "Cahn-Hilliard Equation"
    architecture: "resnet"  # Good for higher-order problems with phase separation
    input_dim: 2  # (x, t)
    output_dim: 1  # u(x,t)
    parameters:
      mobility: 1.0  # Mobility coefficient
      kappa: 0.01  # Interface energy coefficient
    domain: [[0.0, 1.0]]
    time_domain: [0.0, 1.0]
    dimension: 1
    initial_condition:
      type: "random"
      amplitude: 0.1
    boundary_conditions:
      dirichlet:
        type: "fixed"
        value: 0.0
      neumann:
        type: "zero"
    # No simple exact solution for Cahn-Hilliard
  
  # Black-Scholes Equation Configuration
  black_scholes:
    name: "Black-Scholes Equation"
    architecture: "feedforward"  # Simple and effective for this type of problem
    input_dim: 2  # (S, t)
    output_dim: 1  # V(S,t)
    parameters:
      sigma: 0.2  # Volatility
      r: 0.05  # Risk-free interest rate
    domain: [[0.0, 200.0]]  # Stock price domain
    time_domain: [0.0, 1.0]  # Time to maturity (years)
    dimension: 1
    initial_condition:
      type: "option"
      strike: 100.0
      option_type: "call"
    boundary_conditions:
      dirichlet:
        type: "custom"
    exact_solution:
      type: "black_scholes"
      strike: 100.0
      option_type: "call"
  
  # Pendulum Equation Configuration
  pendulum:
    name: "Pendulum Equation"
    architecture: "resnet"  # Good for nonlinear dynamics and oscillatory behavior
    input_dim: 2  # (theta, t)
    output_dim: 1  # angular position
    parameters:
      g: 9.81  # Gravitational constant
      L: 1.0   # Pendulum length
      damping: 0.1  # Damping coefficient
    domain: [[0.0, 2.0 * 3.14159]]  # Angle domain
    time_domain: [0.0, 10.0]
    dimension: 1
    initial_condition:
      type: "sine"
      amplitude: 0.5
      frequency: 1.0
    boundary_conditions:
      dirichlet:
        type: "periodic"
    exact_solution:
      type: "damped_oscillation"  # Approximate solution for small-angle pendulum with damping
      initial_amplitude: 0.5
      natural_frequency: 3.132  # sqrt(g/L)
      damping_coefficient: 0.1

  # Heat Equation 2D Configuration
  heat_2d:
    name: "Heat Equation 2D"
    architecture: "fourier"  # Excellent for multidimensional problems
    input_dim: 3  # (x, y, t)
    output_dim: 1  # u(x,y,t)
    parameters:
      alpha: 0.01  # Thermal diffusivity coefficient
    domain: [[0.0, 1.0], [0.0, 1.0]]  # 2D spatial domain
    time_domain: [0.0, 1.0]
    dimension: 2
    initial_condition:
      type: "sine_2d"
      amplitude: 1.0
      frequency_x: 1.0
      frequency_y: 1.0
    boundary_conditions:
      dirichlet:
        type: "fixed"
        value: 0.0
    exact_solution:
      type: "sine_2d"
      amplitude: 1.0
      frequency_x: 1.0
      frequency_y: 1.0

# Training Configuration
training:
  num_epochs: 1000
  batch_size: 1000
  num_collocation_points: 10000
  validation_frequency: 100
  early_stopping:
    enabled: true
    patience: 10
  optimizer_config:
    name: "adam"
    lr: 0.001
    weight_decay: 1.0e-5
  rl_update_frequency: 10  # Update RL agent every N epochs

# Reinforcement Learning Configuration
rl:
  enabled: true
  state_dim: 2  # (x, t)
  action_dim: 1  # Sampling probability
  hidden_dim: 64
  learning_rate: 0.001
  gamma: 0.99
  epsilon_start: 1.0
  epsilon_end: 0.01
  epsilon_decay: 0.995
  memory_size: 10000
  batch_size: 64
  target_update: 100
  reward_weights:
    residual: 1.0
    boundary: 1.0
    initial: 1.0
    exploration: 0.1

# Evaluation Configuration
evaluation:
  num_points: 100  # Number of points for evaluation
  metrics:
    - "l2_error"
    - "max_error"
    - "mean_error"
  save_plots: true
  plot_frequency: 100  # Plot every N epochs

# Logging Configuration
logging:
  level: "INFO"
  save_tensorboard: true
  log_frequency: 100

# Paths
paths:
  results_dir: "results"
  log_dir: "logs"
